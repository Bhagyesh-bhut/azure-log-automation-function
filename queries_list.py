from datetime import datetime,timedelta,date

today = date.today()
yesterday = today - timedelta(days = 1)


alert_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-alerts-sub_flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "alert system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'
account_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-accountSub_Flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "account system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'
disbursement_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-disbursement_sub_flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "disbursment system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'
collateral_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-collateralSub_Flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "collateral system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'
insurance_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-insurance_sub_flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "insurance system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'
customer_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-customer-mgmt-sync-app" | distinct timestamp, message | where timestamp >= startofday(ago(1d)) and timestamp < endofday(ago(1d)) | where parse_json(message).locationInfo.rootContainer contains "post-customers-flow" and parse_json(message).environment contains "prod" | extend batch=parse_json(tostring(parse_json(message).content)) | where message contains "system api input" | project Ids=parse_json(batch)["BatchIds"], timestamp | mv-expand Ids | project Ids, timestamp | summarize IdCount= count() by hourofDay = hourofday(timestamp) | project hourofDay, IdCount | order by hourofDay asc'


disbursment_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-disbursement_sub_flow" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "disbursment batch failed records" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'
account_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-accountSub_Flow" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "account batch failed records" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'
collateral_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-collateralSub_Flow" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "collateral batch failed records" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'
insurance_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-insurance_sub_flow" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "insurance batch failed records" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'
customer_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-customer-mgmt-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-customers-flo" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "system api input" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'
alert_error_count='traces | extend customdata=parse_json(customDimensions) | extend appName = customdata.ThreadName | where appName contains "prod-kafka-fsc-financial-accounts-sync-app" | distinct timestamp, message | order by timestamp asc | where parse_json(message).locationInfo.rootContainer contains "post-alerts-sub_flow" | where timestamp >= todatetime("'+str(yesterday)+'T00:00:00.071Z") | where parse_json(message).message contains "alert batch failed records" | extend batch=parse_json(tostring(parse_json(message).content)) | mv-expand batch | project responseCode=parse_json(tostring(batch)).httpStatusCode, timestamp, detail=tostring(batch), personId = parse_json(tostring(batch)).Id, correlationId=parse_json(tostring(batch)).correlationId  | where detail contains "unable to obtain exclusive"'